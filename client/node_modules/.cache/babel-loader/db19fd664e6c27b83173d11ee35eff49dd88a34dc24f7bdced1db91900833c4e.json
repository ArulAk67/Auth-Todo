{"ast":null,"code":"var _jsxFileName = \"A:\\\\MERN\\\\Auth + todo\\\\client\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// const api_base = 'http://localhost:5500';\n\n// function Todo() {\n// \tconst [todos, setTodos] = useState([]);\n// \tconst [popupActive, setPopupActive] = useState(false);\n// \tconst [newTodo, setNewTodo] = useState(\"\");\n\n// \tuseEffect(() => {\n// \t\tGetTodos();\n// \t}, []);\n\n// \t// const GetTodos = async() => {\n// \t// \tfetch(api_base + '/todos')\n// \t// \t\t.then(res => res.json())\n// \t// \t\t.then(data => setTodos(data))\n// \t// \t\t.catch((err) => console.error(\"Error: \", err));\n\n//     //     };\n\n//     const GetTodos = async () => {\n//         try {\n//           const response = await fetch(api_base + '/todo', {\n//             headers: {\n//               'Authorization': localStorage.getItem('userId')\n//             }\n//           });\n//           if (!response.ok) {\n//             throw new Error('Failed to fetch todos');\n//           }\n//           const data = await response.json();\n//           setTodos(data.todos);\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       };\n\n// \tconst completeTodo = async id => {\n// \t\tconst data = await fetch(api_base + '/todo/complete/' + id).then(res => res.json());\n\n// \t\tsetTodos(todos => todos.map(todo => {\n// \t\t\tif (todo._id === data._id) {\n// \t\t\t\ttodo.complete = data.complete;\n// \t\t\t}\n\n// \t\t\treturn todo;\n// \t\t}));\n\n// \t}\n\n// \tconst addTodo = async () => {\n// \t\tconst data = await fetch(api_base + \"/todo/new\", {\n// \t\t\tmethod: \"POST\",\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\" \n// \t\t\t},\n// \t\t\tbody: JSON.stringify({\n// \t\t\t\ttext: newTodo,\n//                 user:localStorage.getItem('userId'),\n// \t\t\t})\n// \t\t}).then(res => res.json());\n\n// \t\tsetTodos([...todos, data]);\n\n// \t\tsetPopupActive(false);\n// \t\tsetNewTodo(\"\");\n// \t}\n\n// \tconst deleteTodo = async id => {\n// \t\tconst data = await fetch(api_base + '/todo/delete/' + id, { method: \"DELETE\" }).then(res => res.json());\n\n// \t\tsetTodos(todos => todos.filter(todo => todo._id !== data._id));\n// \t}\n\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<h1>Welcome !!</h1>\n// \t\t\t<h4>Your tasks</h4>\n\n// \t\t\t<div className=\"todos\">\n// \t\t\t\t{todos.length > 0 ? todos.map(todo => (\n// \t\t\t\t\t<div className={\n// \t\t\t\t\t\t\"todo\" + (todo.complete ? \" is-complete\" : \"\")\n// \t\t\t\t\t} key={todo._id} onClick={() => completeTodo(todo._id)}>\n// \t\t\t\t\t\t<div className=\"checkbox\"></div>\n\n// \t\t\t\t\t\t<div className=\"text\">{todo.text}</div>\n\n// \t\t\t\t\t\t<div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>x</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t)) : (\n// \t\t\t\t\t<p>You currently have no tasks</p>\n// \t\t\t\t)}\n// \t\t\t</div>\n\n// \t\t\t<div className=\"addPopup\" onClick={() => setPopupActive(true)}>+</div>\n\n// \t\t\t{popupActive ? (\n// \t\t\t\t<div className=\"popup\">\n// \t\t\t\t\t<div className=\"closePopup\" onClick={() => setPopupActive(false)}>X</div>\n// \t\t\t\t\t<div className=\"content\">\n// \t\t\t\t\t\t<h3>Add Task</h3>\n// \t\t\t\t\t\t<input type=\"text\" className=\"add-todo-input\" onChange={e => setNewTodo(e.target.value)} value={newTodo} />\n// \t\t\t\t\t\t<div className=\"button\" onClick={addTodo}>Create Task</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t) : ''}\n// \t\t</div>\n// \t);\n// }\n\n// export default Todo;\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_base = 'http://localhost:5500';\nfunction Todo() {\n  _s();\n  const history = useHistory();\n  const [todos, setTodos] = useState([]);\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    GetTodos();\n  }, []);\n  const GetTodos = async () => {\n    try {\n      const response = await fetch(api_base + '/todo', {\n        headers: {\n          'Authorization': localStorage.getItem('userId')\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch todos');\n      }\n      const data = await response.json();\n      setTodos(data.todos);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const completeTodo = async id => {\n    const data = await fetch(api_base + '/todo/complete/' + id).then(res => res.json());\n    updateTodoInState(data);\n  };\n  const addTodo = async () => {\n    const data = await fetch(api_base + \"/todo/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: newTodo,\n        user: localStorage.getItem('userId')\n      })\n    }).then(res => res.json());\n    updateTodoInState(data);\n    setPopupActive(false);\n    setNewTodo(\"\");\n    history.push('/todo');\n  };\n  const deleteTodo = async id => {\n    await fetch(api_base + '/todo/delete/' + id, {\n      method: \"DELETE\"\n    });\n    setTodos(todos.filter(todo => todo._id !== id));\n  };\n  const updateTodoInState = updatedTodo => {\n    setTodos(prevTodos => prevTodos.map(todo => todo._id === updatedTodo._id ? updatedTodo : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome !!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.length > 0 ? todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\" + (todo.complete ? \" is-complete\" : \"\"),\n        onClick: () => completeTodo(todo._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-todo\",\n          onClick: () => deleteTodo(todo._id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You currently have no tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPopup\",\n      onClick: () => setPopupActive(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), popupActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopup\",\n        onClick: () => setPopupActive(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-todo-input\",\n          onChange: e => setNewTodo(e.target.value),\n          value: newTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: addTodo,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"vuY8rOc3Pl/gAHDdOLEY0rWneFU=\", false, function () {\n  return [useHistory];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","jsxDEV","_jsxDEV","api_base","Todo","_s","history","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","GetTodos","response","fetch","headers","localStorage","getItem","ok","Error","data","json","error","console","completeTodo","id","then","res","updateTodoInState","addTodo","method","body","JSON","stringify","text","user","push","deleteTodo","filter","todo","_id","updatedTodo","prevTodos","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","complete","onClick","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["A:/MERN/Auth + todo/client/src/components/Todo.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// const api_base = 'http://localhost:5500';\r\n\r\n// function Todo() {\r\n// \tconst [todos, setTodos] = useState([]);\r\n// \tconst [popupActive, setPopupActive] = useState(false);\r\n// \tconst [newTodo, setNewTodo] = useState(\"\");\r\n\r\n// \tuseEffect(() => {\r\n// \t\tGetTodos();\r\n// \t}, []);\r\n\r\n// \t// const GetTodos = async() => {\r\n// \t// \tfetch(api_base + '/todos')\r\n// \t// \t\t.then(res => res.json())\r\n// \t// \t\t.then(data => setTodos(data))\r\n// \t// \t\t.catch((err) => console.error(\"Error: \", err));\r\n        \r\n//     //     };\r\n\r\n//     const GetTodos = async () => {\r\n//         try {\r\n//           const response = await fetch(api_base + '/todo', {\r\n//             headers: {\r\n//               'Authorization': localStorage.getItem('userId')\r\n//             }\r\n//           });\r\n//           if (!response.ok) {\r\n//             throw new Error('Failed to fetch todos');\r\n//           }\r\n//           const data = await response.json();\r\n//           setTodos(data.todos);\r\n//         } catch (error) {\r\n//           console.error('Error:', error);\r\n//         }\r\n//       };\r\n      \r\n\t\r\n\r\n// \tconst completeTodo = async id => {\r\n// \t\tconst data = await fetch(api_base + '/todo/complete/' + id).then(res => res.json());\r\n\r\n// \t\tsetTodos(todos => todos.map(todo => {\r\n// \t\t\tif (todo._id === data._id) {\r\n// \t\t\t\ttodo.complete = data.complete;\r\n// \t\t\t}\r\n\r\n// \t\t\treturn todo;\r\n// \t\t}));\r\n\t\t\r\n// \t}\r\n\r\n// \tconst addTodo = async () => {\r\n// \t\tconst data = await fetch(api_base + \"/todo/new\", {\r\n// \t\t\tmethod: \"POST\",\r\n// \t\t\theaders: {\r\n// \t\t\t\t\"Content-Type\": \"application/json\" \r\n// \t\t\t},\r\n// \t\t\tbody: JSON.stringify({\r\n// \t\t\t\ttext: newTodo,\r\n//                 user:localStorage.getItem('userId'),\r\n// \t\t\t})\r\n// \t\t}).then(res => res.json());\r\n\r\n// \t\tsetTodos([...todos, data]);\r\n\r\n// \t\tsetPopupActive(false);\r\n// \t\tsetNewTodo(\"\");\r\n// \t}\r\n\r\n// \tconst deleteTodo = async id => {\r\n// \t\tconst data = await fetch(api_base + '/todo/delete/' + id, { method: \"DELETE\" }).then(res => res.json());\r\n\r\n// \t\tsetTodos(todos => todos.filter(todo => todo._id !== data._id));\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<div className=\"App\">\r\n// \t\t\t<h1>Welcome !!</h1>\r\n// \t\t\t<h4>Your tasks</h4>\r\n\r\n// \t\t\t<div className=\"todos\">\r\n// \t\t\t\t{todos.length > 0 ? todos.map(todo => (\r\n// \t\t\t\t\t<div className={\r\n// \t\t\t\t\t\t\"todo\" + (todo.complete ? \" is-complete\" : \"\")\r\n// \t\t\t\t\t} key={todo._id} onClick={() => completeTodo(todo._id)}>\r\n// \t\t\t\t\t\t<div className=\"checkbox\"></div>\r\n\r\n// \t\t\t\t\t\t<div className=\"text\">{todo.text}</div>\r\n\r\n// \t\t\t\t\t\t<div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>x</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t)) : (\r\n// \t\t\t\t\t<p>You currently have no tasks</p>\r\n// \t\t\t\t)}\r\n// \t\t\t</div>\r\n\r\n// \t\t\t<div className=\"addPopup\" onClick={() => setPopupActive(true)}>+</div>\r\n\r\n// \t\t\t{popupActive ? (\r\n// \t\t\t\t<div className=\"popup\">\r\n// \t\t\t\t\t<div className=\"closePopup\" onClick={() => setPopupActive(false)}>X</div>\r\n// \t\t\t\t\t<div className=\"content\">\r\n// \t\t\t\t\t\t<h3>Add Task</h3>\r\n// \t\t\t\t\t\t<input type=\"text\" className=\"add-todo-input\" onChange={e => setNewTodo(e.target.value)} value={newTodo} />\r\n// \t\t\t\t\t\t<div className=\"button\" onClick={addTodo}>Create Task</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t) : ''}\r\n// \t\t</div>\r\n// \t);\r\n// }\r\n\r\n// export default Todo;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'; \r\nconst api_base = 'http://localhost:5500';\r\n\r\nfunction Todo() {\r\n    const history = useHistory();\r\n    const [todos, setTodos] = useState([]);\r\n    const [popupActive, setPopupActive] = useState(false);\r\n    const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        GetTodos();\r\n    }, []);\r\n\r\n    const GetTodos = async () => {\r\n        try {\r\n            const response = await fetch(api_base + '/todo', {\r\n                headers: {\r\n                    'Authorization': localStorage.getItem('userId')\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch todos');\r\n            }\r\n            const data = await response.json();\r\n            setTodos(data.todos);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const completeTodo = async (id) => {\r\n        const data = await fetch(api_base + '/todo/complete/' + id).then((res) => res.json());\r\n        updateTodoInState(data);\r\n    };\r\n\r\n    const addTodo = async () => {\r\n        const data = await fetch(api_base + \"/todo/new\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                text: newTodo,\r\n                user: localStorage.getItem('userId'),\r\n            })\r\n        }).then((res) => res.json());\r\n        updateTodoInState(data);\r\n        setPopupActive(false);\r\n        setNewTodo(\"\");\r\n        history.push('/todo');\r\n    };\r\n\r\n    const deleteTodo = async (id) => {\r\n        await fetch(api_base + '/todo/delete/' + id, { method: \"DELETE\" });\r\n        setTodos(todos.filter((todo) => todo._id !== id));\r\n    };\r\n\r\n    const updateTodoInState = (updatedTodo) => {\r\n        setTodos((prevTodos) =>\r\n            prevTodos.map((todo) =>\r\n                todo._id === updatedTodo._id ? updatedTodo : todo\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Welcome !!</h1>\r\n            <h4>Your tasks</h4>\r\n\r\n            <div className=\"todos\">\r\n                {todos.length > 0 ? (\r\n                    todos.map((todo) => (\r\n                        <div\r\n                            className={\r\n                                \"todo\" + (todo.complete ? \" is-complete\" : \"\")\r\n                            }\r\n                            key={todo._id}\r\n                            onClick={() => completeTodo(todo._id)}\r\n                        >\r\n                            <div className=\"checkbox\"></div>\r\n\r\n                            <div className=\"text\">{todo.text}</div>\r\n\r\n                            <div\r\n                                className=\"delete-todo\"\r\n                                onClick={() => deleteTodo(todo._id)}\r\n                            >\r\n                                x\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>You currently have no tasks</p>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"addPopup\" onClick={() => setPopupActive(true)}>\r\n                +\r\n            </div>\r\n\r\n            {popupActive ? (\r\n                <div className=\"popup\">\r\n                    <div\r\n                        className=\"closePopup\"\r\n                        onClick={() => setPopupActive(false)}\r\n                    >\r\n                        X\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h3>Add Task</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"add-todo-input\"\r\n                            onChange={(e) => setNewTodo(e.target.value)}\r\n                            value={newTodo}\r\n                        />\r\n                        <div className=\"button\" onClick={addTodo}>\r\n                            Create Task\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}