{"ast":null,"code":"var _jsxFileName = \"A:\\\\MERN\\\\Auth + todo\\\\client\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// const api_base = 'http://localhost:5500';\n\n// function Todo() {\n// \tconst [todos, setTodos] = useState([]);\n// \tconst [popupActive, setPopupActive] = useState(false);\n// \tconst [newTodo, setNewTodo] = useState(\"\");\n\n// \tuseEffect(() => {\n// \t\tGetTodos();\n// \t}, []);\n\n// \t// const GetTodos = async() => {\n// \t// \tfetch(api_base + '/todos')\n// \t// \t\t.then(res => res.json())\n// \t// \t\t.then(data => setTodos(data))\n// \t// \t\t.catch((err) => console.error(\"Error: \", err));\n\n//     //     };\n\n//     const GetTodos = async () => {\n//         try {\n//           const response = await fetch(api_base + '/todo', {\n//             headers: {\n//               'Authorization': localStorage.getItem('userId')\n//             }\n//           });\n//           if (!response.ok) {\n//             throw new Error('Failed to fetch todos');\n//           }\n//           const data = await response.json();\n//           setTodos(data.todos);\n//         } catch (error) {\n//           console.error('Error:', error);\n//         }\n//       };\n\n// \tconst completeTodo = async id => {\n// \t\tconst data = await fetch(api_base + '/todo/complete/' + id).then(res => res.json());\n\n// \t\tsetTodos(todos => todos.map(todo => {\n// \t\t\tif (todo._id === data._id) {\n// \t\t\t\ttodo.complete = data.complete;\n// \t\t\t}\n\n// \t\t\treturn todo;\n// \t\t}));\n\n// \t}\n\n// \tconst addTodo = async () => {\n// \t\tconst data = await fetch(api_base + \"/todo/new\", {\n// \t\t\tmethod: \"POST\",\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\" \n// \t\t\t},\n// \t\t\tbody: JSON.stringify({\n// \t\t\t\ttext: newTodo,\n//                 user:localStorage.getItem('userId'),\n// \t\t\t})\n// \t\t}).then(res => res.json());\n\n// \t\tsetTodos([...todos, data]);\n\n// \t\tsetPopupActive(false);\n// \t\tsetNewTodo(\"\");\n// \t}\n\n// \tconst deleteTodo = async id => {\n// \t\tconst data = await fetch(api_base + '/todo/delete/' + id, { method: \"DELETE\" }).then(res => res.json());\n\n// \t\tsetTodos(todos => todos.filter(todo => todo._id !== data._id));\n// \t}\n\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<h1>Welcome !!</h1>\n// \t\t\t<h4>Your tasks</h4>\n\n// \t\t\t<div className=\"todos\">\n// \t\t\t\t{todos.length > 0 ? todos.map(todo => (\n// \t\t\t\t\t<div className={\n// \t\t\t\t\t\t\"todo\" + (todo.complete ? \" is-complete\" : \"\")\n// \t\t\t\t\t} key={todo._id} onClick={() => completeTodo(todo._id)}>\n// \t\t\t\t\t\t<div className=\"checkbox\"></div>\n\n// \t\t\t\t\t\t<div className=\"text\">{todo.text}</div>\n\n// \t\t\t\t\t\t<div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>x</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t)) : (\n// \t\t\t\t\t<p>You currently have no tasks</p>\n// \t\t\t\t)}\n// \t\t\t</div>\n\n// \t\t\t<div className=\"addPopup\" onClick={() => setPopupActive(true)}>+</div>\n\n// \t\t\t{popupActive ? (\n// \t\t\t\t<div className=\"popup\">\n// \t\t\t\t\t<div className=\"closePopup\" onClick={() => setPopupActive(false)}>X</div>\n// \t\t\t\t\t<div className=\"content\">\n// \t\t\t\t\t\t<h3>Add Task</h3>\n// \t\t\t\t\t\t<input type=\"text\" className=\"add-todo-input\" onChange={e => setNewTodo(e.target.value)} value={newTodo} />\n// \t\t\t\t\t\t<div className=\"button\" onClick={addTodo}>Create Task</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t) : ''}\n// \t\t</div>\n// \t);\n// }\n\n// export default Todo;\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_base = 'https://auth-todo-backend.onrender.com';\nfunction Todo() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    getTodos();\n  }, []);\n  const getTodos = async () => {\n    try {\n      const response = await fetch(api_base + '/todo', {\n        headers: {\n          'Authorization': localStorage.getItem('userId')\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch todos');\n      }\n      const data = await response.json();\n      setTodos(data.todos);\n    } catch (error) {\n      console.error('Error:', error);\n      // You might want to inform the user about the error here\n    }\n  };\n\n  const completeTodo = async id => {\n    try {\n      const response = await fetch(api_base + '/todo/complete/' + id);\n      if (!response.ok) {\n        throw new Error('Failed to complete todo');\n      }\n      const data = await response.json();\n      setTodos(prevTodos => prevTodos.map(todo => {\n        if (todo._id === data._id) {\n          return data;\n        }\n        return todo;\n      }));\n    } catch (error) {\n      console.error('Error:', error);\n      // You might want to inform the user about the error here\n    }\n  };\n\n  const addTodo = async () => {\n    try {\n      const response = await fetch(api_base + \"/todo/new\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: newTodo,\n          user: localStorage.getItem('userId')\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add new todo');\n      }\n      const data = await response.json();\n      setTodos(prevTodos => [...prevTodos, data]);\n      setPopupActive(false);\n      setNewTodo(\"\");\n    } catch (error) {\n      console.error('Error:', error);\n      // You might want to inform the user about the error here\n    }\n  };\n\n  const deleteTodo = async id => {\n    try {\n      await fetch(api_base + '/todo/delete/' + id, {\n        method: \"DELETE\"\n      });\n      setTodos(prevTodos => prevTodos.filter(todo => todo._id !== id));\n    } catch (error) {\n      console.error('Error:', error);\n      // You might want to inform the user about the error here\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tood_App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todo_h1\",\n      children: \"Welcome !!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"todo_h4\",\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.length > 0 ? todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\" + (todo.complete ? \" is-complete\" : \"\"),\n        onClick: () => completeTodo(todo._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-todo\",\n          onClick: () => deleteTodo(todo._id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"todo_p\",\n        children: \"You currently have no tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPopup\",\n      onClick: () => setPopupActive(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), popupActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopup\",\n        onClick: () => setPopupActive(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"todo_h3\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-todo-input\",\n          onChange: e => setNewTodo(e.target.value),\n          value: newTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: addTodo,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"hBaeT8MXYiBrK1sejsTqGWSgcfw=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","api_base","Todo","_s","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","getTodos","response","fetch","headers","localStorage","getItem","ok","Error","data","json","error","console","completeTodo","id","prevTodos","map","todo","_id","addTodo","method","body","JSON","stringify","text","user","deleteTodo","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","complete","onClick","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["A:/MERN/Auth + todo/client/src/components/Todo.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// const api_base = 'http://localhost:5500';\r\n\r\n// function Todo() {\r\n// \tconst [todos, setTodos] = useState([]);\r\n// \tconst [popupActive, setPopupActive] = useState(false);\r\n// \tconst [newTodo, setNewTodo] = useState(\"\");\r\n\r\n// \tuseEffect(() => {\r\n// \t\tGetTodos();\r\n// \t}, []);\r\n\r\n// \t// const GetTodos = async() => {\r\n// \t// \tfetch(api_base + '/todos')\r\n// \t// \t\t.then(res => res.json())\r\n// \t// \t\t.then(data => setTodos(data))\r\n// \t// \t\t.catch((err) => console.error(\"Error: \", err));\r\n        \r\n//     //     };\r\n\r\n//     const GetTodos = async () => {\r\n//         try {\r\n//           const response = await fetch(api_base + '/todo', {\r\n//             headers: {\r\n//               'Authorization': localStorage.getItem('userId')\r\n//             }\r\n//           });\r\n//           if (!response.ok) {\r\n//             throw new Error('Failed to fetch todos');\r\n//           }\r\n//           const data = await response.json();\r\n//           setTodos(data.todos);\r\n//         } catch (error) {\r\n//           console.error('Error:', error);\r\n//         }\r\n//       };\r\n      \r\n\t\r\n\r\n// \tconst completeTodo = async id => {\r\n// \t\tconst data = await fetch(api_base + '/todo/complete/' + id).then(res => res.json());\r\n\r\n// \t\tsetTodos(todos => todos.map(todo => {\r\n// \t\t\tif (todo._id === data._id) {\r\n// \t\t\t\ttodo.complete = data.complete;\r\n// \t\t\t}\r\n\r\n// \t\t\treturn todo;\r\n// \t\t}));\r\n\t\t\r\n// \t}\r\n\r\n// \tconst addTodo = async () => {\r\n// \t\tconst data = await fetch(api_base + \"/todo/new\", {\r\n// \t\t\tmethod: \"POST\",\r\n// \t\t\theaders: {\r\n// \t\t\t\t\"Content-Type\": \"application/json\" \r\n// \t\t\t},\r\n// \t\t\tbody: JSON.stringify({\r\n// \t\t\t\ttext: newTodo,\r\n//                 user:localStorage.getItem('userId'),\r\n// \t\t\t})\r\n// \t\t}).then(res => res.json());\r\n\r\n// \t\tsetTodos([...todos, data]);\r\n\r\n// \t\tsetPopupActive(false);\r\n// \t\tsetNewTodo(\"\");\r\n// \t}\r\n\r\n// \tconst deleteTodo = async id => {\r\n// \t\tconst data = await fetch(api_base + '/todo/delete/' + id, { method: \"DELETE\" }).then(res => res.json());\r\n\r\n// \t\tsetTodos(todos => todos.filter(todo => todo._id !== data._id));\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<div className=\"App\">\r\n// \t\t\t<h1>Welcome !!</h1>\r\n// \t\t\t<h4>Your tasks</h4>\r\n\r\n// \t\t\t<div className=\"todos\">\r\n// \t\t\t\t{todos.length > 0 ? todos.map(todo => (\r\n// \t\t\t\t\t<div className={\r\n// \t\t\t\t\t\t\"todo\" + (todo.complete ? \" is-complete\" : \"\")\r\n// \t\t\t\t\t} key={todo._id} onClick={() => completeTodo(todo._id)}>\r\n// \t\t\t\t\t\t<div className=\"checkbox\"></div>\r\n\r\n// \t\t\t\t\t\t<div className=\"text\">{todo.text}</div>\r\n\r\n// \t\t\t\t\t\t<div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>x</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t)) : (\r\n// \t\t\t\t\t<p>You currently have no tasks</p>\r\n// \t\t\t\t)}\r\n// \t\t\t</div>\r\n\r\n// \t\t\t<div className=\"addPopup\" onClick={() => setPopupActive(true)}>+</div>\r\n\r\n// \t\t\t{popupActive ? (\r\n// \t\t\t\t<div className=\"popup\">\r\n// \t\t\t\t\t<div className=\"closePopup\" onClick={() => setPopupActive(false)}>X</div>\r\n// \t\t\t\t\t<div className=\"content\">\r\n// \t\t\t\t\t\t<h3>Add Task</h3>\r\n// \t\t\t\t\t\t<input type=\"text\" className=\"add-todo-input\" onChange={e => setNewTodo(e.target.value)} value={newTodo} />\r\n// \t\t\t\t\t\t<div className=\"button\" onClick={addTodo}>Create Task</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n// \t\t\t) : ''}\r\n// \t\t</div>\r\n// \t);\r\n// }\r\n\r\n// export default Todo;\r\n\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst api_base = 'https://auth-todo-backend.onrender.com';\r\n\r\nfunction Todo() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [popupActive, setPopupActive] = useState(false);\r\n    const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    const getTodos = async () => {\r\n        try {\r\n            const response = await fetch(api_base + '/todo', {\r\n                headers: {\r\n                    'Authorization': localStorage.getItem('userId')\r\n                }\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch todos');\r\n            }\r\n            const data = await response.json();\r\n            setTodos(data.todos);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            // You might want to inform the user about the error here\r\n        }\r\n    };\r\n\r\n    const completeTodo = async id => {\r\n        try {\r\n            const response = await fetch(api_base + '/todo/complete/' + id);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to complete todo');\r\n            }\r\n            const data = await response.json();\r\n            setTodos(prevTodos => prevTodos.map(todo => {\r\n                if (todo._id === data._id) {\r\n                    return data;\r\n                }\r\n                return todo;\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            // You might want to inform the user about the error here\r\n        }\r\n    };\r\n\r\n    const addTodo = async () => {\r\n        try {\r\n            const response = await fetch(api_base + \"/todo/new\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    text: newTodo,\r\n                    user: localStorage.getItem('userId'),\r\n                })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Failed to add new todo');\r\n            }\r\n            const data = await response.json();\r\n            setTodos(prevTodos => [...prevTodos, data]);\r\n            setPopupActive(false);\r\n            setNewTodo(\"\");\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            // You might want to inform the user about the error here\r\n        }\r\n    };\r\n\r\n    const deleteTodo = async id => {\r\n        try {\r\n            await fetch(api_base + '/todo/delete/' + id, { method: \"DELETE\" });\r\n            setTodos(prevTodos => prevTodos.filter(todo => todo._id !== id));\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            // You might want to inform the user about the error here\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tood_App\">\r\n            <h1 className='todo_h1'>Welcome !!</h1>\r\n            <h4 className='todo_h4'>Your tasks</h4>\r\n\r\n            <div className=\"todos\">\r\n                {todos.length > 0 ? todos.map(todo => (\r\n                    <div className={\"todo\" + (todo.complete ? \" is-complete\" : \"\")} key={todo._id} onClick={() => completeTodo(todo._id)}>\r\n                        <div className=\"checkbox\"></div>\r\n                        <div className=\"text\">{todo.text}</div>\r\n                        <div className=\"delete-todo\" onClick={() => deleteTodo(todo._id)}>x</div>\r\n                    </div>\r\n                )) : (\r\n                    <p className='todo_p'>You currently have no tasks</p>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"addPopup\" onClick={() => setPopupActive(true)}>+</div>\r\n\r\n            {popupActive && (\r\n                <div className=\"popup\">\r\n                    <div className=\"closePopup\" onClick={() => setPopupActive(false)}>X</div>\r\n                    <div className=\"content\">\r\n                        <h3 className='todo_h3'>Add Task</h3>\r\n                        <input type=\"text\" className=\"add-todo-input\" onChange={e => setNewTodo(e.target.value)} value={newTodo} />\r\n                        <div className=\"button\" onClick={addTodo}>Create Task</div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}